version: '3.7'

services:
  catalog:
    image: matatika/catalog:latest-dev
    ports:
      - '8080:8080'
    deploy:
        resources:
            reservations:
              memory: 1g
            limits:
              memory: 3g
    tty: true
    environment:
      # Define DEVELOPMENT mode environments like debug settings etc
      - ACTIVE_PROFILES=default,distribution
      - "JAVA_OPTS=-XX:MaxDirectMemorySize=1G -XX:MaxMetaspaceSize=240234K -XX:ReservedCodeCacheSize=240M -Xss1M -Xms512m -Xmx1040584K"
      - SPRING_H2_CONSOLE_ENABLED=false
      - PERSISTENCE_CATALOG_URL=jdbc:postgresql://db:5432/warehouse
      - PERSISTENCE_CATALOG_USER=warehouse
      - PERSISTENCE_CATALOG_PASS=warehouse
      - PERSISTENCE_CATALOG_DRIVER_CLASS_NAME=org.postgresql.Driver
      - MATATIKA_WORKSPACE_DIRS=/project
      # Disable elastic search
      - MATATIKA_ELASTICSEARCH_ENABLED=false
      - MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED=false
      # Generate a 256-bit (32-char) secret key and set it here. This is used to generate access tokens for the Matatika App and API.
      - MATATIKA_AUTH_LOCAL_SECRET=matatikaauthlocalsecret_changeme
    depends_on: {"db": {"condition": "service_healthy"}}
    healthcheck:
      test: curl -s http://localhost:8080/api/actuator/health | grep "UP" >/dev/null; if [[ $$? == 0 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - project:/project

  app:
    user: root
    image: matatika/app:latest-dev
    ports:
      - '3080:80'
      - '3443:443'
    tty: true
    environment:
      # Define DEVELOPMENT mode environments like debug settings etc
      - REACT_APP_ENV=distribution
    depends_on: {"catalog": {"condition": "service_healthy"}}
    entrypoint: >
      /bin/bash -c "
        /app/docker-entrypoint.sh app"

  db:
    image: postgres:11
    volumes:
      - matatika-catalog_postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: warehouse
      POSTGRES_PASSWORD: warehouse
      POSTGRES_USER: warehouse
    expose:
      - "5432"
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U warehouse"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  matatika-catalog_postgres:
  project:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}
      o: bind

networks:
  default:
    name: matatika
